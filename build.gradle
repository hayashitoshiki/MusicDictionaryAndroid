// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.5.0"
    ext.dokka_version = '0.9.17'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        //Realm
        classpath "io.realm:realm-gradle-plugin:4.2.0"
        // safe-args
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.3.5"
        // firebase
        classpath 'com.google.gms:google-services:4.3.8'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:${dokka_version}"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'https://jitpack.io' }
    }
}

subprojects { // 配下のモジュール全てに適用される
    switch (project.name) {
        case 'app':
            apply plugin: 'com.android.application'
            break
        default:
            apply plugin: 'com.android.library'
            break
    }
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-kapt'

    android {
        compileSdkVersion 30
        buildToolsVersion "29.0.3"

        defaultConfig {
            minSdkVersion 24
            targetSdkVersion 30
            versionCode 1
            versionName "1.0"

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

        lintOptions {
            checkReleaseBuilds false
            abortOnError false
            xmlReport true

        }
        testOptions {
            unitTests.includeAndroidResources = true
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
            debug {
                testCoverageEnabled true
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        kotlinOptions {
            jvmTarget = '1.8'
        }
        buildFeatures {
            dataBinding true
            viewBinding true
        }

        flavorDimensions "default"
        productFlavors {
            production {
                buildConfigField "String", "webServer", "\"https://demo-musicdic-dionary.herokuapp.com/\""
            }
            staging {
                buildConfigField "String", "webServer", "\"https://demo-musicdic-dionary.herokuapp.com/\""
            }
            develop {
                buildConfigField "String", "webServer", "\"https://demo-musicdic-dionary.herokuapp.com/\""
            }
            local {
                buildConfigField "String", "webServer", "\"http://10.0.2.2:3000//\""
            }
        }

    }

    configurations { ktlint }

    dependencies {
        implementation fileTree(dir: "libs", include: ["*.jar"])
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation 'androidx.core:core-ktx:1.5.0'
        implementation 'androidx.appcompat:appcompat:1.3.0'

        ktlint "com.pinterest:ktlint:0.41.0"

        // coroutines
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
        // koin
        def koin_version = "2.0.1"
        implementation "org.koin:koin-android:$koin_version"
        implementation "org.koin:koin-android-scope:$koin_version"
        implementation "org.koin:koin-android-viewmodel:$koin_version"
        // Room
        def room_version = "2.3.0"
        implementation "androidx.room:room-runtime:$room_version"
        implementation "androidx.room:room-ktx:$room_version"
        kapt "androidx.room:room-compiler:$room_version"

        // test
        testImplementation 'junit:junit:4.13.2'
        androidTestImplementation 'androidx.test.ext:junit:1.1.2'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
        // mockito
        testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
        // livedata-test
        testImplementation "androidx.arch.core:core-testing:2.1.0"
        // coroutine-test
        testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0'
        testImplementation 'io.mockk:mockk:1.10.3-jdk8'
        // Optional -- Robolectric environment
        testImplementation 'androidx.test:core:1.3.0'
    }

    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        main = "com.pinterest.ktlint.Main"
        classpath = configurations.ktlint
        args "--android", "--color", "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/reports/ktlint-results.xml", "src/**/*.kt"
        ignoreExitValue true
    }

    task ktlintFormat(type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        main = "com.pinterest.ktlint.Main"
        classpath = configurations.ktlint
        args "-F", "--android", "src/**/*.kt"
        ignoreExitValue true
    }

    afterEvaluate {
        check.dependsOn ktlint
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}